
<div class="board"
     style="position: relative;
            width:  @(HtmlWidth)px;
            height: @(HtmlHeight)px;
            border: solid 1px;
            background-image: url(images/tweed.png);
            ">

     @{
        if (BoardData == null)
        {
            <p>No board</p>
        }
        else
        {
            foreach (var square in BoardData.Squares)
            {
                // shroud the square by simply not rendering it
                if (Shroud.Contains(square))
                    continue;

                <Square Size=square.Size
                        Row=square.Row
                        Col=square.Col />
            }
         }
     }
    
</div>

@code {
    private const int HtmlWidth  = 36 * Ratio;
    private const int HtmlHeight = 36 * Ratio;

    private const int Ratio = 20;

    [Parameter]
    public string Sequence { get; set; } = string.Empty;

    [Parameter]
    public List<Model.Square> Shroud { get; set; } = new();

    private Model.Board? BoardData { get; set; }

    protected override void OnInitialized()
    {
        BoardData = new Model.Board(Sequence);
    }

    protected override void OnParametersSet()
    {
        OnInitialized();
    }
}
